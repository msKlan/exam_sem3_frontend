{"version":3,"sources":["Nav.js","Home.js","Movies.js","Login.js","App.js","settings.js","apiFacade.js","index.js"],"names":["Nav","props","isLoggedIn","loginMsg","username","className","exact","activeClassName","to","Home","Movies","movies","getMovieById","getMoviesByGenre","getMoviesAll","useState","genreName","setGenreName","movieId","setMovieId","onClick","type","id","placeholder","onChange","event","target","value","map","movie","key","title","year","votes","Login","login","logout","setUsername","password","setPassword","evt","onSubmit","NoMatch","App","apiFacade","match","setIsLoggedIn","emptyItem","setMovies","history","useHistory","useEffect","path","console","log","then","data","dataArray","push","catch","err","loggedIn","URL","makeOptions","method","addToken","body","opts","headers","Accept","getToken","JSON","stringify","handleHttpErrors","res","ok","json","removeToken","Promise","reject","status","fullError","localStorage","getItem","removeItem","options","fetch","token","setItem","name","ReactDOM","render","style","marginLeft","marginRight","document","getElementById"],"mappings":"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","file":"static/js/main.14ba93b5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction Nav(props) {\r\n  const { isLoggedIn, loginMsg, username } = props;\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"header\">\r\n        <li>\r\n          <NavLink exact activeClassName=\"active\" to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"active\" to=\"/movies\">\r\n            Movie\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink activeClassName=\"active\" to=\"/login-out\">\r\n            {loginMsg} <small>{username && `(${username})`}</small>\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n      <p>Discribe how to use the front-end.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, {useState} from 'react';\r\n\r\nimport './App.css';\r\n\r\nfunction Movies(props) {\r\n  const {movies, getMovieById, getMoviesByGenre, getMoviesAll} = props;\r\n  const [genreName, setGenreName] = useState('');\r\n  const [movieId, setMovieId] = useState('');\r\n\r\n  const getMoviesByIdClick = () => {\r\n    getMovieById(movieId);\r\n  };\r\n\r\n  const getMoviesByGenreClick = () => {\r\n    getMoviesByGenre(genreName);\r\n  };\r\n\r\n  const getMoviesAllClick = () => {\r\n    getMoviesAll();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Movies</h2>\r\n      <button onClick={getMoviesAllClick}>Get all movies</button>\r\n      <button onClick={getMoviesByIdClick}>Get movies by ID</button>\r\n      <input type=\"text\" id=\"movieid\" placeholder=\"ID\" onChange={event => setMovieId(event.target.value)}></input>\r\n\r\n      <button onClick={getMoviesByGenreClick}>Get movies by genre</button>\r\n      <input type=\"text\" id=\"genrename\" placeholder=\"Genre\" onChange={event => setGenreName(event.target.value)}></input>\r\n\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Title</th>\r\n            <th>Year</th>\r\n            <th>Votes</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {movies.map(movie => (\r\n            <tr key={movie.id}>\r\n              <td>{movie.id}</td>\r\n              <td>{movie.title}</td>\r\n              <td>{movie.year}</td>\r\n              <td>{movie.votes}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Login(props) {\r\n  const { isLoggedIn, login, logout } = props;\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const onChange = evt => {};\r\n\r\n  const loginSubmit = () => {\r\n    // console.log(\"Login - loginSubmit: \", isLoggedIn, username, password);\r\n    login(username, password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isLoggedIn && (\r\n        <>\r\n          <h2>Login</h2>\r\n          <form onChange={onChange} onSubmit={loginSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"username\"\r\n                placeholder=\"User name\"\r\n                onChange={event => setUsername(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={event => setPassword(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"col-sm-offset-3 col-sm-9\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </>\r\n      )}\r\n      {isLoggedIn && (\r\n        <>\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4>Logout</h4>\r\n            </div>\r\n            <div className=\"modal-body\">Are you sure you want to log-off?</div>\r\n            <div className=\"modal-footer\">\r\n              <button onClick={logout} className=\"btn btn-primary btn-block\">\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  // Prompt,\r\n  useHistory,\r\n  // useParams,\r\n  // Redirect\r\n} from 'react-router-dom';\r\n\r\nimport Nav from './Nav';\r\nimport Home from './Home';\r\nimport Movies from './Movies';\r\nimport Login from './Login';\r\n\r\nimport './App.css';\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div>\r\n      <h2>This URL does not exist!</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App({apiFacade, match}) {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const emptyItem = {title: '', year: '', id: '', votes: ''};\r\n  const [movies, setMovies] = useState([emptyItem]);\r\n\r\n  let history = useHistory();\r\n\r\n  const login = (username, password) => {\r\n    console.log(username, password);\r\n    apiFacade\r\n      .login(username, password)\r\n      .then(data => {\r\n        setIsLoggedIn(apiFacade.loggedIn);\r\n        setUsername(username);\r\n        // getItems();\r\n        // console.log(items);\r\n        history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log('Ups login:' + err);\r\n        // history.push(\"/\");\r\n      });\r\n    history.push('/');\r\n  };\r\n\r\n  const logout = () => {\r\n    apiFacade.logout();\r\n    setIsLoggedIn(apiFacade.loggedIn);\r\n    setUsername('');\r\n    history.push('/');\r\n  };\r\n\r\n  // Get all items from back-end when rendering\r\n  useEffect(() => {\r\n    // getItems();\r\n  }, [apiFacade]);\r\n\r\n  // Get all items from back-end\r\n  const getMovieById = id => {\r\n    console.log('getMovieById:', id);\r\n    apiFacade\r\n      .getMovieById(id)\r\n      .then(data => {\r\n        console.log(data);\r\n        let dataArray = [];\r\n        dataArray.push(data);\r\n        setMovies(dataArray);\r\n      })\r\n      .catch(err => {\r\n        console.log('Ups refreshitems:' + err);\r\n        setMovies([emptyItem]);\r\n      });\r\n  };\r\n  const getMoviesByGenre = genreName => {\r\n    console.log('getMoviesByGenre:', genreName);\r\n    apiFacade\r\n      .getMoviesByGenre(genreName)\r\n      .then(data => {\r\n        // console.log('h:', data);\r\n        setMovies(data);\r\n      })\r\n      .catch(err => {\r\n        console.log('Ups refreshitems:' + err);\r\n        setMovies([emptyItem]);\r\n      });\r\n  };\r\n\r\n  const getMoviesAll = () => {\r\n    console.log('getMoviesAll');\r\n    apiFacade\r\n      .getMoviesAll()\r\n      .then(data => {\r\n        // console.log('h:', data);\r\n        setMovies(data);\r\n      })\r\n      .catch(err => console.log('Ups refreshitems:' + err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav loginMsg={isLoggedIn ? 'Logout' : 'Login'} isLoggedIn={isLoggedIn} username={username} />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/movies\" exact>\r\n          <Movies movies={movies} getMovieById={getMovieById} getMoviesByGenre={getMoviesByGenre} getMoviesAll={getMoviesAll} />\r\n        </Route>\r\n        <Route path=\"/login-out\">\r\n          <Login isLoggedIn={isLoggedIn} login={login} logout={logout} />\r\n        </Route>\r\n        <Route>\r\n          <NoMatch />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// const URL = 'http://localhost:8080/exam_sem3/api';\r\nconst URL = 'https://aieou.dk/exam_sem3/api';\r\nexport default URL;\r\n","import URL from './settings';\r\n\r\nfunction apiFacade() {\r\n  const makeOptions = (method, addToken, body) => {\r\n    // method: GET, POST, PUT, DELETE\r\n    // addToken: true: add JWT, false: no JWT\r\n    // body: body to add if any\r\n    // Return: options for fetch-method\r\n    var opts = {\r\n      method: method,\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n        Accept: 'application/json',\r\n      },\r\n    };\r\n    if (addToken && loggedIn()) {\r\n      opts.headers['x-access-token'] = getToken();\r\n    }\r\n    if (body) {\r\n      opts.body = JSON.stringify(body);\r\n    }\r\n    return opts;\r\n  };\r\n\r\n  // Generic errorhandler for fetch-metod\r\n  function handleHttpErrors(res) {\r\n    console.log(res);\r\n    if (!res.ok) {\r\n      removeToken(); // Remove JWT if an error occurred\r\n      return Promise.reject({status: res.status, fullError: res.json()});\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  // Store JWT in localStorage\r\n  const setToken = token => {\r\n    // console.log(\"setToken: \", token);\r\n    localStorage.setItem('jwtToken', token);\r\n  };\r\n\r\n  // Get JWT from localStorage - if any\r\n  const getToken = () => {\r\n    return localStorage.getItem('jwtToken');\r\n  };\r\n\r\n  // Remove JWT from localStorage - if any\r\n  const removeToken = () => {\r\n    localStorage.removeItem('jwtToken');\r\n  };\r\n\r\n  // Return loggedIn true if there is a JWT\r\n  const loggedIn = () => {\r\n    const loggedIn = getToken() != null;\r\n    return loggedIn;\r\n  };\r\n\r\n  // Login and store JWT ig successful\r\n  const login = (username, password) => {\r\n    // console.log(\"apiFacade-login: \", username, password);\r\n    const options = makeOptions('POST', true, {\r\n      username: username,\r\n      password: password,\r\n    });\r\n    // console.log(\"login:\", options);\r\n    return fetch(URL + '/login', options)\r\n      .then(handleHttpErrors)\r\n      .then(res => {\r\n        setToken(res.token);\r\n        console.log('apiFacade-login: ', res.token);\r\n        // TBD - Store other data from login if any - roles?\r\n      });\r\n  };\r\n\r\n  // Logout and remove store JWT\r\n  const logout = () => {\r\n    removeToken();\r\n  };\r\n\r\n  const getMovieById = id => {\r\n    console.log('getMovieById: ', URL, loggedIn());\r\n    const options = makeOptions('GET', true);\r\n    return fetch(URL + '/movie/id/' + id, options).then(handleHttpErrors);\r\n  };\r\n\r\n  const getMoviesByGenre = name => {\r\n    console.log('getMoviesByGenre: ', URL, loggedIn());\r\n    const options = makeOptions('GET', true);\r\n    return fetch(URL + '/movie/genre/name/' + name, options).then(handleHttpErrors);\r\n  };\r\n\r\n  const getMoviesAll = () => {\r\n    console.log('getMoviesAll: ', URL, loggedIn());\r\n    const options = makeOptions('GET', true);\r\n    return fetch(URL + '/movie/all', options).then(handleHttpErrors);\r\n  };\r\n\r\n  return {\r\n    // Remember all statements below are a shortcut for this version: getitems: getitems\r\n    login,\r\n    logout,\r\n    loggedIn,\r\n    getMovieById,\r\n    getMoviesByGenre,\r\n    getMoviesAll,\r\n  };\r\n}\r\n\r\n// let returnVal = apiFacade();\r\n// export default returnVal;\r\nexport default apiFacade();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport apiFacade from './apiFacade';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst AppWithRouter = () => {\r\n  return (\r\n    <div style={{marginLeft: '5%', marginRight: '5%'}}>\r\n      <Router>\r\n        <App apiFacade={apiFacade} />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\nReactDOM.render(<AppWithRouter />, document.getElementById('root'));\r\n"],"sourceRoot":""}